{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useReducer } from \"react\";\nconst initialState = {\n  value: \"\",\n  isTouched: false\n};\nconst inputStateReducer = (state, action) => {\n  return {\n    initialState\n  };\n};\nconst useInputForm = validateValue => {\n  _s();\n  useReducer(inputStateReducer);\n  const [enteredInput, setEnteredInput] = useState(\"\");\n  const [touchedInput, setTouchedInput] = useState(false);\n  const validation = validateValue(enteredInput);\n  const isInvalid = !validation && touchedInput;\n  const onChange = event => {\n    setEnteredInput(event.target.value);\n  };\n  const onBlur = () => {\n    setTouchedInput(true);\n  };\n  const reset = () => {\n    setEnteredInput(\"\");\n    setTouchedInput(false);\n  };\n  return {\n    value: enteredInput,\n    valid: validation,\n    hasError: isInvalid,\n    onChange,\n    onBlur,\n    reset\n  };\n};\n_s(useInputForm, \"0Eg9OMIYthMTkanR91CDzpdorWw=\");\nexport default useInputForm;","map":{"version":3,"names":["useState","useReducer","initialState","value","isTouched","inputStateReducer","state","action","useInputForm","validateValue","_s","enteredInput","setEnteredInput","touchedInput","setTouchedInput","validation","isInvalid","onChange","event","target","onBlur","reset","valid","hasError"],"sources":["/Users/zuna/Documents/React/React - The Complete Guide 2023 (incl. React Router & Redux)/Section 17 - Forms & User Input/src/hooks/use-inputForm.js"],"sourcesContent":["import { useState, useReducer } from \"react\";\n\nconst initialState = {\n  value: \"\",\n  isTouched: false,\n};\n\nconst inputStateReducer = (state, action) => {\n  return {\n    initialState,\n  };\n};\n\nconst useInputForm = (validateValue) => {\n  useReducer(inputStateReducer);\n\n  const [enteredInput, setEnteredInput] = useState(\"\");\n  const [touchedInput, setTouchedInput] = useState(false);\n\n  const validation = validateValue(enteredInput);\n  const isInvalid = !validation && touchedInput;\n\n  const onChange = (event) => {\n    setEnteredInput(event.target.value);\n  };\n\n  const onBlur = () => {\n    setTouchedInput(true);\n  };\n\n  const reset = () => {\n    setEnteredInput(\"\");\n    setTouchedInput(false);\n  };\n\n  return {\n    value: enteredInput,\n    valid: validation,\n    hasError: isInvalid,\n    onChange,\n    onBlur,\n    reset,\n  };\n};\n\nexport default useInputForm;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAE5C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC3C,OAAO;IACLL;EACF,CAAC;AACH,CAAC;AAED,MAAMM,YAAY,GAAIC,aAAa,IAAK;EAAAC,EAAA;EACtCT,UAAU,CAACI,iBAAiB,CAAC;EAE7B,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMe,UAAU,GAAGN,aAAa,CAACE,YAAY,CAAC;EAC9C,MAAMK,SAAS,GAAG,CAACD,UAAU,IAAIF,YAAY;EAE7C,MAAMI,QAAQ,GAAIC,KAAK,IAAK;IAC1BN,eAAe,CAACM,KAAK,CAACC,MAAM,CAAChB,KAAK,CAAC;EACrC,CAAC;EAED,MAAMiB,MAAM,GAAGA,CAAA,KAAM;IACnBN,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMO,KAAK,GAAGA,CAAA,KAAM;IAClBT,eAAe,CAAC,EAAE,CAAC;IACnBE,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,OAAO;IACLX,KAAK,EAAEQ,YAAY;IACnBW,KAAK,EAAEP,UAAU;IACjBQ,QAAQ,EAAEP,SAAS;IACnBC,QAAQ;IACRG,MAAM;IACNC;EACF,CAAC;AACH,CAAC;AAACX,EAAA,CA9BIF,YAAY;AAgClB,eAAeA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}