{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalAmount: 0\n  },\n  reducers: {\n    addToItem(state, action) {\n      const newItem = action.payload;\n      const oldItem = state.items.filter(state => state.id == newItem.oldItem);\n      if (o) state.items.push(action.payload);\n    },\n    removeFromItem(state, action) {}\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;\n\n/*reducers: {\n    addItemToCart(state, actions) {\n      const newItem = actions.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n\n      if (existingItem) {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      } else {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find((item) => item.id === id);\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    },\n  },\n*/","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","totalAmount","reducers","addToItem","state","action","newItem","payload","oldItem","filter","id","o","push","removeFromItem","cartActions","actions","reducer"],"sources":["/Users/zuna/Documents/React/React - The Complete Guide 2023 (incl. React Router & Redux)/Section 20 - Advanced Redux/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalAmount: 0,\n  },\n  reducers: {\n    addToItem(state, action) {\n      const newItem = action.payload;\n      const oldItem = state.items.filter(\n        (state) => state.id == newItem.oldItem\n      );\n\n      if(o)\n\n      state.items.push(action.payload);\n    },\n    removeFromItem(state, action) {},\n  },\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice.reducer;\n\n/*reducers: {\n    addItemToCart(state, actions) {\n      const newItem = actions.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n\n      if (existingItem) {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      } else {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find((item) => item.id === id);\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    },\n  },\n*/\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE,CAAC;IAChBC,WAAW,EAAE;EACf,CAAC;EACDC,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,OAAO,GAAGJ,KAAK,CAACL,KAAK,CAACU,MAAM,CAC/BL,KAAK,IAAKA,KAAK,CAACM,EAAE,IAAIJ,OAAO,CAACE,OACjC,CAAC;MAED,IAAGG,CAAC,EAEJP,KAAK,CAACL,KAAK,CAACa,IAAI,CAACP,MAAM,CAACE,OAAO,CAAC;IAClC,CAAC;IACDM,cAAcA,CAACT,KAAK,EAAEC,MAAM,EAAE,CAAC;EACjC;AACF,CAAC,CAAC;AAEF,OAAO,MAAMS,WAAW,GAAGlB,SAAS,CAACmB,OAAO;AAE5C,eAAenB,SAAS,CAACoB,OAAO;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}