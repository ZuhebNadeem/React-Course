{"ast":null,"code":"var _jsxFileName = \"/Users/zuna/Documents/React/React - The Complete Guide 2023 (incl. React Router & Redux)/Section 15 - Connecting to database (Http request)/src/App.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  async function fetchMoviesHandler() {\n    _s();\n    useState(tr);\n    const reponse = await fetch(\"https://swapi.dev/api/films\", {\n      method: \"GET\"\n    });\n    const data = await reponse.json();\n    const transformedData = data.results.map(movieData => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText: movieData.opening_crawl,\n        releaseDate: movieData.release_date\n      };\n    });\n    setMovies(transformedData);\n  }\n  _s(fetchMoviesHandler, \"MwVLvq0dRrItBk85hKIqznfGc9Y=\");\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"Lxj0oPfrNknYmZGrPnOcMKhk5W4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","movies","setMovies","loading","setLoading","fetchMoviesHandler","tr","reponse","fetch","method","data","json","transformedData","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zuna/Documents/React/React - The Complete Guide 2023 (incl. React Router & Redux)/Section 15 - Connecting to database (Http request)/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  async function fetchMoviesHandler() {\n    useState(tr)\n    const reponse = await fetch(\"https://swapi.dev/api/films\", {\n      method: \"GET\",\n    });\n\n    const data = await reponse.json();\n\n    const transformedData = data.results.map((movieData) => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText: movieData.opening_crawl,\n        releaseDate: movieData.release_date,\n      };\n    });\n    setMovies(transformedData);\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      {loading && (\n        <section>\n          <MoviesList movies={movies} />\n        </section>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7C,eAAeY,kBAAkBA,CAAA,EAAG;IAAAN,EAAA;IAClCN,QAAQ,CAACa,EAAE,CAAC;IACZ,MAAMC,OAAO,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MACzDC,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMH,OAAO,CAACI,IAAI,CAAC,CAAC;IAEjC,MAAMC,eAAe,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,SAAS,IAAK;MACtD,OAAO;QACLC,EAAE,EAAED,SAAS,CAACE,UAAU;QACxBC,KAAK,EAAEH,SAAS,CAACG,KAAK;QACtBC,WAAW,EAAEJ,SAAS,CAACK,aAAa;QACpCC,WAAW,EAAEN,SAAS,CAACO;MACzB,CAAC;IACH,CAAC,CAAC;IACFpB,SAAS,CAACU,eAAe,CAAC;EAC5B;EAACb,EAAA,CAjBcM,kBAAkB;EAmBjC,oBACET,OAAA,CAACJ,KAAK,CAAC+B,QAAQ;IAAAC,QAAA,gBACb5B,OAAA;MAAA4B,QAAA,eACE5B,OAAA;QAAQ6B,OAAO,EAAEpB,kBAAmB;QAAAmB,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,EACT1B,OAAO,iBACNP,OAAA;MAAA4B,QAAA,eACE5B,OAAA,CAACF,UAAU;QAACO,MAAM,EAAEA;MAAO;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CACV;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAErB;AAAC/B,GAAA,CAnCQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}