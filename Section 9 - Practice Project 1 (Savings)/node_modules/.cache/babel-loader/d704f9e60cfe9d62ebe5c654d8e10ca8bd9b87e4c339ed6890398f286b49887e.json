{"ast":null,"code":"var _jsxFileName = \"/Users/zuna/Documents/ReactKurs/Section 9 - Practice Project 1/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport logo from \"./assets/investment-calculator-logo.png\";\nimport Form from \"./Form.js\";\nimport Table from \"./Table\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userInput, setUserInput] = useState([]);\n  const calculateHandler = userInput => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    setYearlyData(oldArray => [...oldArray, yearlyData]);\n\n    // do something with yearlyData ...\n  };\n\n  const yearlyData = []; // per-year results\n\n  let currentSavings = userInput.currentSaving;\n  const yearlyContribution = userInput.yearlySaving; // as mentioned: feel free to change the shape...\n  const expectedReturn = +userInput.interest / 100;\n  const duration = +userInput.duration;\n\n  // The below code calculates yearly results (total savings, interest etc)\n  for (let i = 0; i < duration; i++) {\n    const yearlyInterest = currentSavings * expectedReturn;\n    currentSavings += yearlyInterest + yearlyContribution;\n    yearlyData.push({\n      // feel free to change the shape of the data pushed to the array!\n      year: i + 1,\n      yearlyInterest: yearlyInterest,\n      savingsEndOfYear: currentSavings,\n      yearlyContribution: yearlyContribution\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Investment Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      formSubmitted: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      allData: yearlyData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YIfflY4Ss/x7RA1JNr0wV1+t9VU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","logo","Form","Table","jsxDEV","_jsxDEV","App","_s","userInput","setUserInput","calculateHandler","setYearlyData","oldArray","yearlyData","currentSavings","currentSaving","yearlyContribution","yearlySaving","expectedReturn","interest","duration","i","yearlyInterest","push","year","savingsEndOfYear","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","formSubmitted","allData","_c","$RefreshReg$"],"sources":["/Users/zuna/Documents/ReactKurs/Section 9 - Practice Project 1/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport logo from \"./assets/investment-calculator-logo.png\";\nimport Form from \"./Form.js\";\nimport Table from \"./Table\";\nimport \"./App.css\";\n\nfunction App() {\n  const [userInput, setUserInput] = useState([]);\n\n  const calculateHandler = (userInput) => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    setYearlyData((oldArray) => [...oldArray, yearlyData]);\n\n    // do something with yearlyData ...\n  };\n\n  const yearlyData = []; // per-year results\n\n  let currentSavings = userInput.currentSaving;\n  const yearlyContribution = userInput.yearlySaving; // as mentioned: feel free to change the shape...\n  const expectedReturn = +userInput.interest / 100;\n  const duration = +userInput.duration;\n\n  // The below code calculates yearly results (total savings, interest etc)\n  for (let i = 0; i < duration; i++) {\n    const yearlyInterest = currentSavings * expectedReturn;\n    currentSavings += yearlyInterest + yearlyContribution;\n\n    yearlyData.push({\n      // feel free to change the shape of the data pushed to the array!\n      year: i + 1,\n      yearlyInterest: yearlyInterest,\n      savingsEndOfYear: currentSavings,\n      yearlyContribution: yearlyContribution,\n    });\n  }\n\n  return (\n    <div>\n      <header className=\"header\">\n        <img src={logo} alt=\"logo\" />\n        <h1>Investment Calculator</h1>\n      </header>\n\n      <Form formSubmitted={calculateHandler} />\n      <Table allData={yearlyData} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,yCAAyC;AAC1D,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMU,gBAAgB,GAAIF,SAAS,IAAK;IACtC;IACA;;IAEAG,aAAa,CAAEC,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEC,UAAU,CAAC,CAAC;;IAEtD;EACF,CAAC;;EAED,MAAMA,UAAU,GAAG,EAAE,CAAC,CAAC;;EAEvB,IAAIC,cAAc,GAAGN,SAAS,CAACO,aAAa;EAC5C,MAAMC,kBAAkB,GAAGR,SAAS,CAACS,YAAY,CAAC,CAAC;EACnD,MAAMC,cAAc,GAAG,CAACV,SAAS,CAACW,QAAQ,GAAG,GAAG;EAChD,MAAMC,QAAQ,GAAG,CAACZ,SAAS,CAACY,QAAQ;;EAEpC;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;IACjC,MAAMC,cAAc,GAAGR,cAAc,GAAGI,cAAc;IACtDJ,cAAc,IAAIQ,cAAc,GAAGN,kBAAkB;IAErDH,UAAU,CAACU,IAAI,CAAC;MACd;MACAC,IAAI,EAAEH,CAAC,GAAG,CAAC;MACXC,cAAc,EAAEA,cAAc;MAC9BG,gBAAgB,EAAEX,cAAc;MAChCE,kBAAkB,EAAEA;IACtB,CAAC,CAAC;EACJ;EAEA,oBACEX,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAQsB,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACxBrB,OAAA;QAAKuB,GAAG,EAAE3B,IAAK;QAAC4B,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7B5B,OAAA;QAAAqB,QAAA,EAAI;MAAqB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eAET5B,OAAA,CAACH,IAAI;MAACgC,aAAa,EAAExB;IAAiB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzC5B,OAAA,CAACF,KAAK;MAACgC,OAAO,EAAEtB;IAAW;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV;AAAC1B,EAAA,CA5CQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}